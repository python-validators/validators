# Utils PEP 621 is enhanced or some fancy build
# system comes up with a clever mechanism to
# itegrate it all. For now poetry works best.


####################
#   Build System   #
####################

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


####################
#     Metadata     #
####################

[tool.poetry]
name = "validators"
version = "0.21.1"
description = "Python Data Validation for Humansâ„¢"
authors = ["Konsta Vesterinen <konsta@fastmonkeys.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/python-validators/validators"
keywords = ["validation", "validator", "python-validator"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
include = ["CHANGES.md", "docs/*", "docs/validators.1", "validators/py.typed"]


####################
#   Dependencies   #
####################

[tool.poetry.dependencies]
python = "^3.8"
eth-hash = {extras = ["pycryptodome"], version = "^0.5.2"}

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.6"
mkdocstrings = { extras = ["python"], version = "^0.21.2" }
pyaml = "^21.10.1"

[tool.poetry.group.hooks]
optional = true

[tool.poetry.group.hooks.dependencies]
pre-commit = "^3.2.2"

[tool.poetry.group.sast]
optional = true

[tool.poetry.group.sast.dependencies]
bandit = "^1.7.5"

[tool.poetry.group.sphinx]
optional = true

[tool.poetry.group.sphinx.dependencies]
sphinx = "^6.1.3"
myst-parser = "^1.0.0"
pypandoc-binary = "^1.11"

[tool.poetry.group.testing]
optional = true

[tool.poetry.group.testing.dependencies]
pytest = "^7.3.0"

[tool.poetry.group.tooling]
optional = true

[tool.poetry.group.tooling.dependencies]
black = "^23.3.0"
flake8 = "^5.0.4"
flake8-docstrings = "^1.7.0"
isort = "^5.12.0"
pyright = "^1.1.302"
tox = "^4.4.11"


####################
#  Configurations  #
####################

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]

[tool.bandit]
exclude_dirs = [".github", ".pytest_cache", ".tox", ".vscode", "site", "tests"]

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
force_sort_within_sections = true
import_heading_firstparty = "local"
import_heading_localfolder = "local"
import_heading_stdlib = "standard"
import_heading_thirdparty = "external"
include_trailing_comma = true
known_local_folder = ["validators"]
length_sort = true
line_length = 100
multi_line_output = 3
profile = "black"
reverse_relative = true
reverse_sort = true
skip_gitignore = true
use_parentheses = true

[tool.pyright]
include = ["validators", "tests"]
exclude = ["**/__pycache__", ".pytest_cache/", ".tox/", "site/"]
pythonVersion = "3.8"
pythonPlatform = "All"
typeCheckingMode = "strict"

[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list =
    py{38,39,310,311}
    format_black
    format_isort
    lint
    type_check

[testenv]
description = run unit tests
deps = pytest
commands = pytest

[testenv:format_black]
description = run formatter
deps = black
commands = black .

[testenv:format_isort]
description = run formatter
deps = isort
commands = isort .

[testenv:lint]
description = run linters
deps = flake8
commands = flake8

[testenv:type_check]
description = run type checker
deps =
    pyright
    pytest
commands = pyright
"""
